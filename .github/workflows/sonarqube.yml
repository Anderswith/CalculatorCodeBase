name: sonarqube.yml

on:
  push:
    branches:
      - main

jobs:
  integration:
    runs-on: ubuntu-latest  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install required tools
        run: |
          dotnet tool install -g dotnet-sonarscanner
          dotnet tool install -g dotnet-reportgenerator-globaltool
          
      - name: Check Secret Variables
        run: |
          echo "Sonar URL: ${{ secrets.SECRET_SONAR_URL }}"
          echo "Sonar Token: ${{ secrets.SECRET_SONAR_TOKEN }}"

      - name: Start Static Code Analysis
        run: |
          dotnet sonarscanner begin \
            /k:"AW-My-Demo-Project" \
            /d:sonar.host.url="${{ vars.SECRET_SONAR_URL }}" \
            /d:sonar.token="${{ secrets.SECRET_SONAR_TOKEN }}" \
            /d:sonar.coverageReportPaths="coverage-report/SonarQube.xml" \
            /d:sonar.exclusions=coverage-report/**/*.html, coverage-report/**/*.css, coverage-report/**/* \
            /d:sonar.qualitygate.wait=true \
            /d:sonar.qualitygate.timeout=300
      
     
      - name: Build
        run: dotnet build

      - name: Run unit tests
        run: dotnet test --collect:"XPlat Code Coverage" --results-directory TestResults

      - name: Generate report
        run: |
          reportgenerator \
          -reports:TestResults/**/coverage.cobertura.xml \
          -targetdir:coverage-report \
          -reporttypes:SonarQube

      - name: Complete Static Code Analysis
        run: |
          dotnet sonarscanner end \
            /d:sonar.token="${{secrets.SECRET_SONAR_TOKEN}}"
